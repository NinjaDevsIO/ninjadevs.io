<p>If you`re using other plugins which uses also language-shortcodes, you can use the enlighter with generic shortcode.</p>

<p><strong>Example</strong></p>
<p><pre>[enlighter lang="js"]
var x = new EnligherJS.Helper($$('pre'));
[/enligher]
</pre></p>

<p><strong>Syntax: </strong><code>[enlighter lang="" theme="" group="" tab="" highlight=""] YOUR CODE [/enlighter]</code></p>

<p><strong>Attributes</strong></p>
<p><ul style="padding-left: 10px">
	<li><strong>lang</strong> (optional) - specify the language which should used, if not defined values from the settings-page are used</li>
	<li><strong>theme</strong> (optional) - defines the theme that should used, will overwrite the settings-page values</li>
	<li><strong>group</strong> (optional) - the group identifier if code-grouping is used (elements with matching identifiers will be grouped together)</li>
	<li><strong>tab</strong> (optional) - set the name of the tab-pane, if not defined the language name will be used as title</li>
	<li><strong>highlight</strong> (optional) - defines a set of lines which are pointed out (ranges are supported).<br />
		e.g. <code>highlight="1,2-4,20"</code> to highlight lines 1,2,3,4,20
	</li>
	<li><strong>offset</strong> (optional) - set the line-numbering offset (starts at 1 by default)</li>
	<li><strong>linenumbers</strong> (optional) - show/hide linenumbers (true/false)</li>
</ul></p>